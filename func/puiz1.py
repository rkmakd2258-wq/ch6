# 이름을 입력받아 환영인사를 출력하는 함수를 작성하세요
# 이름과 인사말을 받아 '이름+인사말' 형태의 문자열을 출력하는 함수를 작성하세요

def fun(name, msg):
    # 문자열 연결 방법: + , f-str
    print(f'{name}님,{msg}')

# 함수호출
# 함수이름(입력값)
# 매개변수가 있으면 개수를 맞춰서 입력값 넣기
# 반환값이 없으므로 함수 호출만 하면 끝
fun('둘리', '안녕하세요')




# 두 개의 숫자를 입력받아,
# 첫 번째 수에서 두 번째 수를 뺀 결과를 반환하는 함수를 작성하세요. 
# 예) 20, 10 -> 10

# 함수 이름 : 맘대로~ func, sub 등
# 입력값 : 숫자 두 개
# 반환값 : 첫 번째 수에서 두 번째 수를 뺀 결과
# 리턴값 있음 -> 결과를 함수 내부에서 처리하지 않고 반환
# 반환받는 쪽에서 처리해야함
# 함수 내부에서 결과 처리 : return (x)
# 함수를 사용하는 쪽에서 결과 처리 : return (o)
def sub(n1, n2):
    # 반환 키워드
    return n1 - n2
# 반환값이 있으면 결과 받기
# 함수 호출
# 함수 이름(입력값)
result = sub(20, 10)
print(result)

# 단, 첫 번째수가 두 번째 수보다 작으면 -999를 반환하세요. 
# 그렇지 않으면 계산한 결과를 반환
# 계산할 필요없음. 바로 -999 반환
# 예) 10, 20 ->-999
# 함수 내부에서 return 키워드 여러번 작성할 수 있지만,
# 함수 내부에서는 return을 한 번만 만날 수 있다
def sub(n1, n2):
    if n1 < n2 :
        return -999
    else:
        return n1 - n2
result = sub(10, 20)
print(f'결과:{result}')



# 숫자를 입력 받아 짝수인지 홀수인지 알려주는 함수를 만드세요
def n(a):
    if a%2 == 0:
        print('짝수')
    else:
        print('홀수')

n(7)



# 값을 하나 입력 받아 타입이 str이면 
# "문자입니다"를 출력하는 함수를 만드세요
# 타입이 str이 아니면 아무것도 출력되지 않습니다
def s(a):
    if type(a) == str:
        print('문자열입니다')

s('안녕')


# 값을 하나 입력 받아 0보다 크면
# '양수입니다' 를 출력하는 함수를 만드세요
def num(b):
    if b>0:
        print('양수입니다')

num(10)


# 리스트를 입력받아 첫 번째 값을 반환하는 함수를 만드세요
def fun(a, b ,c):
    return fun
result = 10,20,30
print(result[0])


# 리스트를 입력받아 리스트 안의 숫자 합을 반환하는 함수
# 함수 정의
def func(lis):
    hap = 0 #합계 (결과)를 저장할 별소
    for n in lis:  
        # 누적 공식
        hap = hap + n
    return hap 
    # 전달받은 갑을 출력
    # 전달받은 리스트 그대로 계산 불가
    # 리스트 안에 있는 요소를 하나씩 꺼내서

# 함수 호출
result1 = func([1,2,3,4,5])
print(result1)
result2 = func([10,20,30])
print(result2)


# 단을 입력 받아 구구단을 출력하는 함수를 만드세요
def func(dan):
    for n in range(1, 10):
        print(f'{dan} X {n} = {dan*n}')

for i in range(2,10):
    func(i)



# 리스트를 입력받아 그 안에 
# 문자열(str) 자료형이 몇 개인지 세는 함수를 만드세요


def func(lis):


